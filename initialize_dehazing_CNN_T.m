function net = initialize_dehazing_CNN_T()
% load('55-best-net-epoch-240.mat');

net.layers = {} ;

filters_num1=96;
filters_num2=32;
% filters_num3=32;

% Block 1
net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{0.001*randn(9,9,3,filters_num1, 'single'), zeros(1, filters_num1, 'single')}}, ...
                           'stride', 1, ...
                           'pad', 0, ...
                           'learningRate', 1e-3 * ones(1, 2, 'single'), ...
                           'weightDecay', 5e-2 *ones(1, 2, 'single')) ;

net.layers{end+1} = struct('type', 'relu') ;

% net.layers{end+1} = struct('type' , 'pool' , ...
%                            'method' , 'max', ...
%                            'pool' , [3 3], ...
%                            'stride' , 1,...
%                            'pad' , 0 ) ;

% Block 2
net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{0.001*randn(5,5,filters_num1,filters_num2, 'single'), zeros(1,filters_num2,'single')}}, ...
                           'stride', 1, ...
                           'pad', 0, ...
                           'learningRate', 1e-3 * ones(1, 2, 'single'), ...
                           'weightDecay', 5e-2 *ones(1, 2, 'single')) ;
                       
net.layers{end+1} = struct('type', 'relu') ;

% net.layers{end+1} = struct('type' , 'pool' , ...
%                            'method' , 'max', ...
%                            'pool' , [3 3], ...
%                            'stride' , 1,...
%                            'pad' , 0 ) ;

% Block 3
net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{0.001*randn(5,5,filters_num2, 1,'single'), zeros(1,1,'single')}}, ...
                           'stride', 1, ...
                           'pad', 0, ...
                           'learningRate', 1e-4 * ones(1, 2, 'single'), ...
                           'weightDecay', 5e-2 *ones(1, 2, 'single')) ;

% net.layers{end+1} = struct('type', 'relu') ;

% Block 4
% net.layers{end+1} = struct('type', 'conv', ...
%                            'weights', {{0.001*randn(3,3,filters_num3, 1,'single'), zeros(1,1,'single')}}, ...
%                            'stride', 1, ...
%                            'pad', 0, ...
%                            'learningRate', 1e-5 * ones(1, 2, 'single'), ...
%                            'weightDecay', 5e-4*ones(1, 2, 'single')) ;
% 
% net.layers{end+1} = struct('type', 'relu') ;
                       
% Loss layer
net.layers{end+1} = struct('type', 'hazesquareloss') ;